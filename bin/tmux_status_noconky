#!/bin/bash

export MPD_HOST=192.168.0.15

function get_cpu_temp() {
    temp=$(cat /sys/class/thermal/thermal_zone0/temp|awk '{ printf("%.0f", $1/1000) }')
    if [ "$temp" -gt "39" ]; then
        echo -n "#[fg=colour1]$temp°C"
    else
        echo -n "$temp°C"
    fi
}

function get_ip() {
    cachefile="${TMPDIR}/tmux.cache.ip"

    ping -c 1 mail.darookee.net > /dev/null 2>&1

    if [ $? -ne 0 ]; then
        echo "#[fg=colour1]OFFLINE"
        exit
    fi

    [[ -f $cachefile ]] || curl -s ipv4.ipchimp.net > $cachefile

    {
        filemtime=`stat -c %Y $cachefile`
        currtime=`date +%s`
        diff=$(( (currtime - filemtime) ))

        [[ "$diff" -lt "60" ]] || curl -s ipv4.ipchimp.net > $cachefile
    } &

    cat $cachefile
}

function get_weather_raw() {

    ## created by gnomeye 2012-01-05
    ## modified by darookee 2015-02-03

    ### Yahoo weather RSS 
    rss='http://weather.yahooapis.com/forecastrss'
    woeid=${1:-640831}
    metr=${2:-c}

    default="✔"
    sun="☀"
    snow="❄"
    rain="☂"
    cloud="☁"

    url="${rss}?w=${woeid}&u=${metr}"
    ret=$(curl -s "$url" | grep "C<BR" | sed 's/^\(.*\)<.*$/\1/')
    condition=${ret%,*}
    temperatur=${ret#*, }
    temperatur=${temperatur% *}
    temperatur=$(echo $temperatur|tr -d ' ')
    metrdisplay=$(echo $metr|tr '[:lower:]' '[:upper:]')
    metrdisplay="°${metrdisplay}"

    case "$condition" in
        *Sun*|*sun*)
            emoji="$sun"
            ;;
        *Snow*|*snow*)
            emoji="$snow"
            ;;
        *storm*|*Storm*|*Rain*|*rain*|*Shower*|*shower*|*Drizzle*|*drizzle*)
            emoji="$rain"
            ;;
        *Cloud*|*cloud*)
            emoji="$cloud"
            ;;
        *)
            emoji="$default"
    esac

    printf "${emoji} ${temperatur}${metrdisplay}"
}

function get_weather() {
    cachefile="${TMPDIR}/tmux.cache.weather"

    [[ -f $cachefile ]] || get_weather_raw > $cachefile

    {
        filemtime=`stat -c %Y $cachefile`
        currtime=`date +%s`
        diff=$(( (currtime - filemtime) ))

        [[ "$diff" -lt "1800" ]] || get_weather_raw > $cachefile
    } &

    cat $cachefile
}

function get_mailcount() {
    maildir="${1-$HOME/.mail/INBOX/new}"

    if [ -e "$maildir" ]; then
        mcount=$(find $maildir -type f | wc -l)
        [[ "0" -lt "${mcount}" ]] && echo "${mcount}"
    fi

}

mail_count=$(get_mailcount ~/.mail/darookee/INBOX/new)

cpu_temp=$(get_cpu_temp)
cpu_percent=$(grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5)} END {printf("%.0f%%", usage) }')
mem_percent=$(free | grep Mem | awk '{printf("%.0f%%", $4/$2 * 100.0)}')
cpu_load=$(uptime|cut -d, -f5|sed 's/ //')

cur_ip=$(get_ip)

space_home=$(df -h /home|grep "[0-9]"|awk '{ print $4 }')

weather=$(get_weather)

date=$(date +"%a, %Y-%m-%d (%V)")
time=$(date +"%H:%M")

# MPDPi not working

if [ ! -z "${mail_count}" ]; then
    echo -n "#[fg=colour3,bg=colour10,nobold]#[bg=colour3,fg=colour9]✉ #[fg=colour10]${mail_count} #[bg=colour3,fg=colour11]#[bg=colour11]"
else 
    echo -n "#[bg=colour10,fg=colour11]#[bg=colour11]"
fi
echo -n "#[bg=colour11,fg=colour9] ❤#[fg=colour12] ${cpu_temp} #[fg=colour12][${cpu_load}][${mem_percent}]"
echo -n "#[fg=colour10,bg=colour11] #[bg=colour10] "
if [ ! -z "${mpc}" ]; then
    echo -n "#[fg=colour6]♪ #[fg=colour12]${mpc}"
else
    echo -n "#[fg=colour2]⍟ #[fg=colour12]${cur_ip}#[fg=colour11]  "
    echo -n "#[fg=colour2]≣ #[fg=colour12]${space_home}"
fi
echo -n "#[fg=colour11,bg=colour10] #[bg=colour11] "
echo -n "#[fg=colour12]${weather}#[bg=colour11,fg=colour4] #[bg=colour4] "
echo -n "#[fg=colour10]${date}#[fg=colour0]  #[fg=colour10,bold]${time} #[fg=colour11,nobold,bg=colour4]"



